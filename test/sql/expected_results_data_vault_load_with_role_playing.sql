CREATE OR REPLACE TABLE dv_stg.orders_20190806_000000 (h_customer_test_role_playing_hashkey TEXT (32) NOT NULL, r_timestamp TIMESTAMP_NTZ NOT NULL, r_source TEXT NOT NULL, customer_test_role_playing_id TEXT NOT NULL, h_order_hashkey TEXT (32) NOT NULL, order_id TEXT NOT NULL, l_order_customer_test_role_playing_hashkey TEXT (32) NOT NULL, ck_test_string TEXT NOT NULL, ck_test_timestamp TIMESTAMP_NTZ NOT NULL, ls_order_customer_test_role_playing_eff_hashdiff TEXT (32) NOT NULL, dummy_descriptive_field TEXT NOT NULL) AS SELECT MD5(COALESCE(customer_test_role_playing_id, 'dv_unknown')) AS h_customer_test_role_playing_hashkey, CAST('2019-08-06T00:00:00.000000Z' AS TIMESTAMP) AS r_timestamp, 'test' AS r_source, COALESCE(customer_test_role_playing_id, 'dv_unknown') AS customer_test_role_playing_id, MD5(COALESCE(order_id, 'dv_unknown')) AS h_order_hashkey, COALESCE(order_id, 'dv_unknown') AS order_id, MD5(COALESCE(order_id, 'dv_unknown')||'|~~|'||COALESCE(customer_test_role_playing_id, 'dv_unknown')||'|~~|'||COALESCE(CAST(ck_test_string AS VARCHAR), '')||'|~~|'||COALESCE(CAST(ck_test_timestamp AS VARCHAR), '')) AS l_order_customer_test_role_playing_hashkey, ck_test_string, ck_test_timestamp, MD5(REGEXP_REPLACE(COALESCE(order_id, 'dv_unknown')||'|~~|'||COALESCE(customer_test_role_playing_id, 'dv_unknown')||'|~~|'||COALESCE(CAST(ck_test_string AS VARCHAR), '')||'|~~|'||COALESCE(CAST(ck_test_timestamp AS VARCHAR), '')||'|~~|'||COALESCE(CAST(dummy_descriptive_field AS VARCHAR), ''), '(\\|~~\\|){1,}$', '')) AS ls_order_customer_test_role_playing_eff_hashdiff, dummy_descriptive_field FROM dv_extract.extract_orders;
INSERT INTO dv.h_customer (h_customer_hashkey, r_timestamp,r_source,customer_id) SELECT h_customer_test_role_playing_hashkey, MIN(r_timestamp) AS r_timestamp,MIN(r_source) AS r_source,MIN(customer_test_role_playing_id) AS customer_test_role_playing_id FROM dv_stg.orders_20190806_000000 AS staging WHERE NOT EXISTS(SELECT 1 FROM dv.h_customer AS hub WHERE hub.customer_id = staging.customer_test_role_playing_id) GROUP BY h_customer_test_role_playing_hashkey;
INSERT INTO dv.h_order (h_order_hashkey, r_timestamp,r_source,order_id) SELECT h_order_hashkey, MIN(r_timestamp) AS r_timestamp,MIN(r_source) AS r_source,MIN(order_id) AS order_id FROM dv_stg.orders_20190806_000000 AS staging WHERE NOT EXISTS(SELECT 1 FROM dv.h_order AS hub WHERE hub.order_id = staging.order_id) GROUP BY h_order_hashkey;
INSERT INTO dv.l_order_customer_test_role_playing (l_order_customer_test_role_playing_hashkey, h_order_hashkey,h_customer_test_role_playing_hashkey,order_id,customer_test_role_playing_id,ck_test_string,ck_test_timestamp,r_timestamp,r_source) SELECT l_order_customer_test_role_playing_hashkey, MIN(h_order_hashkey) AS h_order_hashkey,MIN(h_customer_test_role_playing_hashkey) AS h_customer_test_role_playing_hashkey,MIN(order_id) AS order_id,MIN(customer_test_role_playing_id) AS customer_test_role_playing_id,MIN(ck_test_string) AS ck_test_string,MIN(ck_test_timestamp) AS ck_test_timestamp,MIN(r_timestamp) AS r_timestamp,MIN(r_source) AS r_source FROM dv_stg.orders_20190806_000000 AS staging WHERE NOT EXISTS(SELECT 1 FROM dv.l_order_customer_test_role_playing AS link WHERE link.l_order_customer_test_role_playing_hashkey = staging.l_order_customer_test_role_playing_hashkey) GROUP BY l_order_customer_test_role_playing_hashkey;
MERGE INTO dv.ls_order_customer_test_role_playing_eff AS satellite USING ( WITH filtered_staging AS ( SELECT staging.* FROM dv_stg.orders_20190806_000000 AS staging CROSS JOIN ( SELECT MAX(r_timestamp) AS max_r_timestamp FROM dv.ls_order_customer_test_role_playing_eff ) AS max_satellite_timestamp WHERE staging.r_timestamp >= COALESCE(max_satellite_timestamp.max_r_timestamp, '1970-01-01 00:00:00') ), effectivity_satellite AS ( SELECT l.h_customer_test_role_playing_hashkey, satellite.* FROM filtered_staging AS staging INNER JOIN dv.l_order_customer_test_role_playing AS l ON (l.h_customer_test_role_playing_hashkey = staging.h_customer_test_role_playing_hashkey) INNER JOIN dv.ls_order_customer_test_role_playing_eff AS satellite ON (l.l_order_customer_test_role_playing_hashkey = satellite.l_order_customer_test_role_playing_hashkey AND satellite.r_timestamp_end = CAST('9999-12-31T00:00:00.000000Z' AS TIMESTAMP)) ), staging_satellite_affected_records AS ( SELECT h_customer_test_role_playing_hashkey, MIN(l_order_customer_test_role_playing_hashkey) AS l_order_customer_test_role_playing_hashkey, MIN(ls_order_customer_test_role_playing_eff_hashdiff) AS ls_order_customer_test_role_playing_eff_hashdiff, MIN(r_timestamp) AS r_timestamp, MIN(r_source) AS r_source ,MIN(dummy_descriptive_field) AS dummy_descriptive_field FROM ( SELECT staging.h_customer_test_role_playing_hashkey, staging.l_order_customer_test_role_playing_hashkey, staging.ls_order_customer_test_role_playing_eff_hashdiff, staging.r_timestamp, staging.r_source ,staging.dummy_descriptive_field FROM filtered_staging AS staging LEFT JOIN effectivity_satellite AS satellite ON (satellite.h_customer_test_role_playing_hashkey = staging.h_customer_test_role_playing_hashkey) WHERE satellite.l_order_customer_test_role_playing_hashkey IS NULL OR satellite.s_hashdiff <> staging.ls_order_customer_test_role_playing_eff_hashdiff UNION ALL SELECT satellite.h_customer_test_role_playing_hashkey, satellite.l_order_customer_test_role_playing_hashkey, satellite.s_hashdiff AS ls_order_customer_test_role_playing_eff_hashdiff, satellite.r_timestamp, satellite.r_source ,satellite.dummy_descriptive_field FROM filtered_staging AS staging INNER JOIN effectivity_satellite AS satellite ON (satellite.h_customer_test_role_playing_hashkey = staging.h_customer_test_role_playing_hashkey) WHERE satellite.s_hashdiff <> staging.ls_order_customer_test_role_playing_eff_hashdiff ) AS affected_records GROUP BY h_customer_test_role_playing_hashkey ) SELECT l_order_customer_test_role_playing_hashkey, ls_order_customer_test_role_playing_eff_hashdiff, r_timestamp AS r_timestamp, LEAD(DATEADD(milliseconds, - 1, r_timestamp), 1, CAST('9999-12-31T00:00:00.000000Z' AS TIMESTAMP)) OVER (PARTITION BY h_customer_test_role_playing_hashkey ORDER BY r_timestamp) AS r_timestamp_end, r_source ,dummy_descriptive_field FROM staging_satellite_affected_records ) AS staging ON (satellite.l_order_customer_test_role_playing_hashkey = staging.l_order_customer_test_role_playing_hashkey AND satellite.r_timestamp = staging.r_timestamp) WHEN MATCHED THEN UPDATE SET satellite.r_timestamp_end = staging.r_timestamp_end WHEN NOT MATCHED THEN INSERT (l_order_customer_test_role_playing_hashkey,s_hashdiff,r_timestamp,r_timestamp_end,r_source,dummy_descriptive_field) VALUES ( staging.l_order_customer_test_role_playing_hashkey, staging.ls_order_customer_test_role_playing_eff_hashdiff, staging.r_timestamp, staging.r_timestamp_end, staging.r_source ,staging.dummy_descriptive_field);
